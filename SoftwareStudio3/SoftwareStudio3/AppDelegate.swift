//
//  AppDelegate.swift
//  SoftwareStudio3
//
//  Created by David Bolis on 24/8/21.
//

import UIKit
import Firebase
import FirebaseFirestore

@main
class AppDelegate: UIResponder, UIApplicationDelegate {

    var window: UIWindow?

    func application(_ application: UIApplication,
                     didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
        // Override point for customization after application launch.
        FirebaseApp.configure()
        
        if (false) //example of how db can be accessed
        {
            let db = Firestore.firestore();
            
            var newObject = db.collection("testCollection").document() // e.g. this could be "Users" or "Workouts" etc.
            //We could instead populate the arguments of the document command with a string to give it a fixed name rather than an autogenerated id. e.g. db.Collection("users").document("David.R.DeAngelis@student.uts.edu.au")
            
            newObject.setData(
                [
                    "id" : newObject.documentID,
                    "dateGenerated" : Date(), //These are all of the properties belonging to that table/document
                    "someOtherProperty" : true //will delete this later on - so don't expect to see this in the db...
                ]) { (error) in
                if let error = error {
                    //there was an error
                }
                else {
                    //error is nil.. so operation completed successfully...
                }
            }
            
            //to delete a value
            db.collection("testCollection").document(newObject.documentID).updateData(["someOtherProperty" : FieldValue.delete()])
            
            //REFER HERE FOR MORE INFORMATION
            // https://firebase.google.com/docs/firestore/manage-data/add-data?authuser=0
            // OR https://youtu.be/qA9L3_cK9Z0?list=RDCMUC2D6eRvCeMtcF5OGHf1-trw&t=374 (for a video)
        }

        return true
    }

    // MARK: UISceneSession Lifecycle

    func application(_ application: UIApplication, configurationForConnecting connectingSceneSession: UISceneSession, options: UIScene.ConnectionOptions) -> UISceneConfiguration {
        // Called when a new scene session is being created.
        // Use this method to select a configuration to create the new scene with.
        return UISceneConfiguration(name: "Default Configuration", sessionRole: connectingSceneSession.role)
    }

    func application(_ application: UIApplication, didDiscardSceneSessions sceneSessions: Set<UISceneSession>) {
        // Called when the user discards a scene session.
        // If any sessions were discarded while the application was not running, this will be called shortly after application:didFinishLaunchingWithOptions.
        // Use this method to release any resources that were specific to the discarded scenes, as they will not return.
    }


}

